{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');\n\nvar _regeneratorRuntime = require('@babel/runtime/regenerator');\n\nvar fetch = require('cross-fetch');\n\nvar PNG = require('@react-pdf/png-js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);\n\nvar _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);\n\nvar fetch__default = /*#__PURE__*/_interopDefaultLegacy(fetch);\n\nvar PNG__default = /*#__PURE__*/_interopDefaultLegacy(PNG);\n\nPNG__default[\"default\"].isValid = function (data) {\n  try {\n    return !!new PNG__default[\"default\"](data);\n  } catch (e) {\n    return false;\n  }\n}; // Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\n\nvar MARKERS = [0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc8, 0xffc9, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf];\n\nvar JPEG = function JPEG(data) {\n  this.data = null;\n  this.width = null;\n  this.height = null;\n  this.data = data;\n\n  if (data.readUInt16BE(0) !== 0xffd8) {\n    throw new Error('SOI not found in JPEG');\n  }\n\n  var marker;\n  var pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    throw new Error('Invalid JPEG.');\n  }\n\n  pos += 3;\n  this.height = data.readUInt16BE(pos);\n  pos += 2;\n  this.width = data.readUInt16BE(pos);\n};\n\nJPEG.isValid = function (data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  var marker;\n  var pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar createCache = function createCache(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$limit = _ref.limit,\n      limit = _ref$limit === void 0 ? 100 : _ref$limit;\n\n  var cache = {};\n  var keys = [];\n  return {\n    get: function get(key) {\n      return cache[key];\n    },\n    set: function set(key, value) {\n      keys.push(key);\n\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n\n      cache[key] = value;\n    },\n    reset: function reset() {\n      cache = {};\n      keys = [];\n    },\n    length: function length() {\n      return keys.length;\n    }\n  };\n};\n\nvar IMAGE_CACHE = createCache({\n  limit: 30\n});\n\nvar fetchRemoteFile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee(uri, options) {\n    var response, buffer;\n    return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch__default[\"default\"](uri, options);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.buffer ? response.buffer() : response.arrayBuffer();\n\n          case 5:\n            buffer = _context.sent;\n            return _context.abrupt(\"return\", buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchRemoteFile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isValidFormat = function isValidFormat(format) {\n  var lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nvar guessFormat = function guessFormat(buffer) {\n  var format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG__default[\"default\"].isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nvar isCompatibleBase64 = function isCompatibleBase64(_ref2) {\n  var uri = _ref2.uri;\n  return /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n};\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n\n    case 'png':\n      return new PNG__default[\"default\"](body);\n\n    default:\n      return null;\n  }\n}\n\nvar resolveBase64Image = function resolveBase64Image(_ref3) {\n  var uri = _ref3.uri;\n  var match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  var format = match[1];\n  var data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(\"Base64 image invalid format: \" + format);\n  }\n\n  return new Promise(function (resolve) {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nvar resolveImageFromData = function resolveImageFromData(src) {\n  if (src.data && src.format) {\n    return new Promise(function (resolve) {\n      return resolve(getImage(src.data, src.format));\n    });\n  }\n\n  throw new Error(\"Invalid data given for local file: \" + JSON.stringify(src));\n};\n\nvar resolveBufferImage = function resolveBufferImage(buffer) {\n  var format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(function (resolve) {\n      return resolve(getImage(buffer, format));\n    });\n  }\n\n  return Promise.resolve();\n};\n\nvar getImageFormat = function getImageFormat(body) {\n  var isPng = body[0] === 137 && body[1] === 80 && body[2] === 78 && body[3] === 71 && body[4] === 13 && body[5] === 10 && body[6] === 26 && body[7] === 10;\n  var isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n  var extension = '';\n\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nvar resolveImageFromUrl = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee2(src) {\n    var uri, body, headers, _src$method, method, data, extension;\n\n    return _regeneratorRuntime__default[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uri = src.uri, body = src.body, headers = src.headers, _src$method = src.method, method = _src$method === void 0 ? 'GET' : _src$method;\n            {\n              _context2.next = 7;\n              break;\n            }\n\n          case 4:\n            _context2.t0 = _context2.sent;\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.next = 9;\n            return fetchRemoteFile(uri, {\n              body: body,\n              headers: headers,\n              method: method\n            });\n\n          case 9:\n            _context2.t0 = _context2.sent;\n\n          case 10:\n            data = _context2.t0;\n            extension = getImageFormat(data);\n            return _context2.abrupt(\"return\", getImage(data, extension));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function resolveImageFromUrl(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar resolveImage = function resolveImage(src, _temp) {\n  var _ref5 = _temp === void 0 ? {} : _temp,\n      _ref5$cache = _ref5.cache,\n      cache = _ref5$cache === void 0 ? true : _ref5$cache;\n\n  var cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  var image;\n\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexports[\"default\"] = resolveImage;","map":{"version":3,"sources":["../src/png.js","../src/jpeg.js","../src/cache.js","../src/resolve.js"],"names":["PNG","MARKERS","JPEG","data","width","height","pos","marker","Buffer","createCache","limit","cache","keys","get","set","reset","length","IMAGE_CACHE","fetchRemoteFile","response","fetch","buffer","isValidFormat","lower","format","guessFormat","isCompatibleBase64","uri","extension","resolveBase64Image","match","resolve","getImage","resolveImageFromData","src","JSON","resolveBufferImage","Promise","getImageFormat","isPng","body","isJpg","resolveImageFromUrl","headers","method","resolveImage","cacheKey","image"],"mappings":"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","sourcesContent":["import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n\n  width = null;\n\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = data => {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nconst getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nconst fetchLocalFile = src =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        reject(new Error('Cannot fetch local file in this environemnt'));\n        return;\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        reject(new Error(`Cannot fetch non-local path: ${src}`));\n        return;\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n\n  return Promise.resolve();\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async src => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nconst resolveImage = (src, { cache = true } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexport default resolveImage;\n"]},"metadata":{},"sourceType":"script"}