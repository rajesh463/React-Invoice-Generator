{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajes\\\\Documents\\\\react-invoice-generator\\\\src\\\\components\\\\EditableFileImage.tsx\";\nimport React, { useRef, useState } from 'react';\nimport Slider from 'rc-slider';\nimport { Image } from '@react-pdf/renderer';\nimport useOnClickOutside from '../hooks/useOnClickOutside';\nimport compose from '../styles/compose';\nimport 'rc-slider/assets/index.css';\n\nconst EditableFileImage = _ref => {\n  let {\n    className,\n    placeholder,\n    value,\n    width,\n    onChangeImage,\n    onChangeWidth,\n    pdfMode\n  } = _ref;\n  const fileInput = useRef(null);\n  const widthWrapper = useRef(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const marks = {\n    100: '100px',\n    150: '150px',\n    200: '200px',\n    250: '250px'\n  };\n\n  const handleClickOutside = () => {\n    if (isEditing) {\n      setIsEditing(false);\n    }\n  };\n\n  useOnClickOutside(widthWrapper, handleClickOutside);\n\n  const handleUpload = () => {\n    var _fileInput$current;\n\n    fileInput === null || fileInput === void 0 ? void 0 : (_fileInput$current = fileInput.current) === null || _fileInput$current === void 0 ? void 0 : _fileInput$current.click();\n  };\n\n  const handleChangeImage = () => {\n    var _fileInput$current2;\n\n    if (fileInput === null || fileInput === void 0 ? void 0 : (_fileInput$current2 = fileInput.current) === null || _fileInput$current2 === void 0 ? void 0 : _fileInput$current2.files) {\n      const files = fileInput.current.files;\n\n      if (files.length > 0 && typeof onChangeImage === 'function') {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => {\n          if (typeof reader.result === 'string') {\n            onChangeImage(reader.result);\n          }\n        });\n        reader.readAsDataURL(files[0]);\n      }\n    }\n  };\n\n  const handleChangeWidth = value => {\n    if (typeof onChangeWidth === 'function') {\n      onChangeWidth(value);\n    }\n  };\n\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const clearImage = () => {\n    if (typeof onChangeImage === 'function') {\n      onChangeImage('');\n    }\n  };\n\n  if (pdfMode) {\n    if (value) {\n      return /*#__PURE__*/React.createElement(Image, {\n        style: { ...compose(`image ${className ? className : ''}`),\n          maxWidth: width\n        },\n        src: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `image ${value ? 'mb-5' : ''} ${className ? className : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, !value ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"image__upload\",\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, placeholder) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: value,\n    className: \"image__img\",\n    alt: placeholder,\n    style: {\n      maxWidth: width || 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"image__change\",\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Change Image\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"image__edit\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Resize Image\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"image__remove\",\n    onClick: clearImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Remove\"), isEditing && /*#__PURE__*/React.createElement(\"div\", {\n    ref: widthWrapper,\n    className: \"image__width-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: 100,\n    max: 250,\n    marks: marks,\n    included: false,\n    step: 1,\n    onChange: handleChangeWidth,\n    defaultValue: width || 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileInput,\n    tabIndex: -1,\n    type: \"file\",\n    accept: \"image/*\",\n    className: \"image__file\",\n    onChange: handleChangeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default EditableFileImage;","map":{"version":3,"names":["React","useRef","useState","Slider","Image","useOnClickOutside","compose","EditableFileImage","className","placeholder","value","width","onChangeImage","onChangeWidth","pdfMode","fileInput","widthWrapper","isEditing","setIsEditing","marks","handleClickOutside","handleUpload","current","click","handleChangeImage","files","length","reader","FileReader","addEventListener","result","readAsDataURL","handleChangeWidth","handleEdit","clearImage","maxWidth"],"sources":["C:/Users/rajes/Documents/react-invoice-generator/src/components/EditableFileImage.tsx"],"sourcesContent":["import React, { FC, useRef, useState } from 'react'\r\nimport Slider from 'rc-slider'\r\nimport { Image } from '@react-pdf/renderer'\r\nimport useOnClickOutside from '../hooks/useOnClickOutside'\r\nimport compose from '../styles/compose'\r\nimport 'rc-slider/assets/index.css'\r\n\r\ninterface Props {\r\n  className?: string\r\n  placeholder?: string\r\n  value?: string\r\n  width?: number\r\n  onChangeImage?: (value: string) => void\r\n  onChangeWidth?: (value: number) => void\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst EditableFileImage: FC<Props> = ({ className, placeholder, value, width, onChangeImage, onChangeWidth, pdfMode }) => {\r\n  const fileInput = useRef<HTMLInputElement>(null)\r\n  const widthWrapper = useRef<HTMLDivElement>(null)\r\n  const [isEditing, setIsEditing] = useState<boolean>(false)\r\n  const marks = {\r\n    100: '100px',\r\n    150: '150px',\r\n    200: '200px',\r\n    250: '250px'\r\n  }\r\n\r\n  const handleClickOutside = () => {\r\n    if (isEditing) {\r\n      setIsEditing(false)\r\n    }\r\n  }\r\n\r\n  useOnClickOutside(widthWrapper, handleClickOutside)\r\n\r\n  const handleUpload = () => {\r\n    fileInput?.current?.click()\r\n  }\r\n\r\n  const handleChangeImage = () => {\r\n    if (fileInput?.current?.files) {\r\n      const files = fileInput.current.files\r\n\r\n      if (files.length > 0 && typeof onChangeImage === 'function') {\r\n        const reader = new FileReader()\r\n\r\n        reader.addEventListener('load', () => {\r\n          if (typeof reader.result === 'string') {\r\n            onChangeImage(reader.result)\r\n          }\r\n        })\r\n\r\n        reader.readAsDataURL(files[0])\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleChangeWidth = (value: number) => {\r\n    if (typeof onChangeWidth === 'function') {\r\n      onChangeWidth(value)\r\n    }\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(!isEditing)\r\n  }\r\n\r\n  const clearImage = () => {\r\n    if (typeof onChangeImage === 'function') {\r\n      onChangeImage('')\r\n    }\r\n  }\r\n\r\n  if (pdfMode) {\r\n    if (value) {\r\n      return (\r\n        <Image\r\n          style={{...compose(`image ${className ? className : ''}`), maxWidth: width}}\r\n          src={value}\r\n        />\r\n      )\r\n    } else {\r\n      return <></>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`image ${value ? 'mb-5' : ''} ${className ? className : ''}`}>\r\n      {!value ? (\r\n        <button\r\n          type=\"button\"\r\n          className=\"image__upload\"\r\n          onClick={handleUpload}\r\n        >\r\n          {placeholder}\r\n        </button>\r\n      ) : (\r\n        <>\r\n          <img\r\n            src={value}\r\n            className=\"image__img\"\r\n            alt={placeholder}\r\n            style={{ maxWidth: width || 100}}\r\n          />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"image__change\"\r\n            onClick={handleUpload}\r\n          >\r\n            Change Image\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"image__edit\"\r\n            onClick={handleEdit}\r\n          >\r\n            Resize Image\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"image__remove\"\r\n            onClick={clearImage}\r\n          >\r\n            Remove\r\n          </button>\r\n\r\n          {isEditing && (\r\n            <div ref={widthWrapper} className=\"image__width-wrapper\">\r\n              <Slider min={100} max={250} marks={marks} included={false} step={1} onChange={handleChangeWidth} defaultValue={width || 100} />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <input\r\n        ref={fileInput}\r\n        tabIndex={-1}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        className=\"image__file\"\r\n        onChange={handleChangeImage}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditableFileImage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}